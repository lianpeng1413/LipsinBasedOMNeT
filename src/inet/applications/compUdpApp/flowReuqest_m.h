//
// Generated file, do not edit! Created by nedtool 5.6 from inet/applications/compUdpApp/flowReuqest.msg.
//

#ifndef __INET_FLOWREUQEST_M_H
#define __INET_FLOWREUQEST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif


namespace inet {

class flowReq;
class flowReply;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/ProtocolTag_m.h" // import inet.common.ProtocolTag

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace inet {

/**
 * Class generated from <tt>inet/applications/compUdpApp/flowReuqest.msg:24</tt> by nedtool.
 * <pre>
 * class flowReq extends FieldsChunk
 * {
 *     int seq;
 *     chunkLength = B(20);
 * 
 * }
 * </pre>
 */
class INET_API flowReq : public ::inet::FieldsChunk
{
  protected:
    int seq = 0;

  private:
    void copy(const flowReq& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const flowReq&);

  public:
    flowReq();
    flowReq(const flowReq& other);
    virtual ~flowReq();
    flowReq& operator=(const flowReq& other);
    virtual flowReq *dup() const override {return new flowReq(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSeq() const;
    virtual void setSeq(int seq);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const flowReq& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, flowReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>inet/applications/compUdpApp/flowReuqest.msg:31</tt> by nedtool.
 * <pre>
 * class flowReply extends FieldsChunk
 * {
 *     int seq;
 *     chunkLength = B(4);
 *     double CreateTime;
 * }
 * </pre>
 */
class INET_API flowReply : public ::inet::FieldsChunk
{
  protected:
    int seq = 0;
    double CreateTime = 0;

  private:
    void copy(const flowReply& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const flowReply&);

  public:
    flowReply();
    flowReply(const flowReply& other);
    virtual ~flowReply();
    flowReply& operator=(const flowReply& other);
    virtual flowReply *dup() const override {return new flowReply(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSeq() const;
    virtual void setSeq(int seq);
    virtual double getCreateTime() const;
    virtual void setCreateTime(double CreateTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const flowReply& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, flowReply& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_FLOWREUQEST_M_H

